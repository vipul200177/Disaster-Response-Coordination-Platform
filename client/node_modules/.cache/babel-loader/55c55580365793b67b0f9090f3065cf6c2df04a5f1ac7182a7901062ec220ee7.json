{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vipul-Pc\\\\OneDrive\\\\Desktop\\\\New folder (2)\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Toaster } from 'react-hot-toast';\nimport io from 'socket.io-client';\nimport axios from 'axios';\n\n// Components\nimport Login from './components/Login';\n\n// Context\nimport { AuthContext } from './context/AuthContext';\nimport { SocketContext } from './context/SocketContext';\n\n// Styles\nimport './App.css';\n\n// Mock users for authentication\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MOCK_USERS = {\n  'netrunnerX': {\n    username: 'netrunnerX',\n    role: 'admin'\n  },\n  'reliefAdmin': {\n    username: 'reliefAdmin',\n    role: 'admin'\n  },\n  'fieldWorker': {\n    username: 'fieldWorker',\n    role: 'contributor'\n  },\n  'volunteer': {\n    username: 'volunteer',\n    role: 'volunteer'\n  },\n  'citizen1': {\n    username: 'citizen1',\n    role: 'citizen'\n  }\n};\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [socket, setSocket] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [disasters, setDisasters] = useState([]);\n\n  // Initialize socket connection\n  useEffect(() => {\n    const newSocket = io('http://localhost:5000', {\n      transports: ['websocket', 'polling']\n    });\n    newSocket.on('connect', () => {\n      console.log('Connected to server');\n      setSocket(newSocket);\n    });\n    newSocket.on('disconnect', () => {\n      console.log('Disconnected from server');\n    });\n    newSocket.on('disaster_created', data => {\n      console.log('New disaster created:', data);\n      // You can add toast notifications here\n    });\n    newSocket.on('disaster_updated', data => {\n      console.log('Disaster updated:', data);\n    });\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n\n  // Check for stored user on app load\n  useEffect(() => {\n    const storedUser = localStorage.getItem('disasterResponseUser');\n    if (storedUser) {\n      const userData = JSON.parse(storedUser);\n      setUser(userData);\n    }\n    setLoading(false);\n  }, []);\n\n  // Fetch disasters when user is logged in\n  useEffect(() => {\n    if (user) {\n      fetchDisasters();\n    }\n  }, [user]);\n\n  // Login function\n  const login = username => {\n    if (MOCK_USERS[username]) {\n      const userData = MOCK_USERS[username];\n      setUser(userData);\n      localStorage.setItem('disasterResponseUser', JSON.stringify(userData));\n\n      // Set default authorization header for all requests\n      axios.defaults.headers.common['Authorization'] = `Bearer ${username}`;\n      return true;\n    }\n    return false;\n  };\n\n  // Logout function\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('disasterResponseUser');\n    delete axios.defaults.headers.common['Authorization'];\n  };\n\n  // Fetch disasters from API\n  const fetchDisasters = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/disasters');\n      setDisasters(response.data || []);\n    } catch (error) {\n      console.error('Error fetching disasters:', error);\n      setDisasters([]);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading Disaster Response Platform...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this);\n  }\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Login, {\n        onLogin: login,\n        users: Object.keys(MOCK_USERS)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Toaster, {\n        position: \"top-right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n      value: socket,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"\\uD83D\\uDEA8 Disaster Response Platform\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Welcome, \", user.username, \" (\", user.role, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: logout,\n              className: \"logout-btn\",\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"main-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stats-grid\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Active Disasters\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"stat-number\",\n                  children: disasters.length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Your Role\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"stat-text\",\n                  children: user.role\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Connection Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"stat-text\",\n                  children: socket ? 'ðŸŸ¢ Connected' : 'ðŸ”´ Disconnected'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"disasters-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Recent Disasters\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this), disasters.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"disasters-list\",\n                children: disasters.map((disaster, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"disaster-card\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: disaster.title || 'Untitled Disaster'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: disaster.description || 'No description available'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"disaster-meta\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\"Status: \", disaster.status || 'Unknown']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 167,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\"Created: \", new Date(disaster.created_at || Date.now()).toLocaleDateString()]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 168,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 25\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No disasters found. The backend is running in mock mode.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"api-test-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"API Test\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: fetchDisasters,\n                className: \"test-btn\",\n                children: \"Refresh Disasters\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Backend URL: http://localhost:5000\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Frontend URL: http://localhost:3000\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Toaster, {\n          position: \"top-right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"p6jFcwA48WpAtPBSxvN68lYtj2g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Toaster","io","axios","Login","AuthContext","SocketContext","jsxDEV","_jsxDEV","MOCK_USERS","username","role","App","_s","user","setUser","socket","setSocket","loading","setLoading","disasters","setDisasters","newSocket","transports","on","console","log","data","close","storedUser","localStorage","getItem","userData","JSON","parse","fetchDisasters","login","setItem","stringify","defaults","headers","common","logout","removeItem","response","get","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","users","Object","keys","position","Provider","value","onClick","length","map","disaster","index","title","description","status","Date","created_at","now","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/Vipul-Pc/OneDrive/Desktop/New folder (2)/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Toaster } from 'react-hot-toast';\r\nimport io from 'socket.io-client';\r\nimport axios from 'axios';\r\n\r\n// Components\r\nimport Login from './components/Login';\r\n\r\n// Context\r\nimport { AuthContext } from './context/AuthContext';\r\nimport { SocketContext } from './context/SocketContext';\r\n\r\n// Styles\r\nimport './App.css';\r\n\r\n// Mock users for authentication\r\nconst MOCK_USERS = {\r\n  'netrunnerX': { username: 'netrunnerX', role: 'admin' },\r\n  'reliefAdmin': { username: 'reliefAdmin', role: 'admin' },\r\n  'fieldWorker': { username: 'fieldWorker', role: 'contributor' },\r\n  'volunteer': { username: 'volunteer', role: 'volunteer' },\r\n  'citizen1': { username: 'citizen1', role: 'citizen' }\r\n};\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(null);\r\n  const [socket, setSocket] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [disasters, setDisasters] = useState([]);\r\n\r\n  // Initialize socket connection\r\n  useEffect(() => {\r\n    const newSocket = io('http://localhost:5000', {\r\n      transports: ['websocket', 'polling']\r\n    });\r\n\r\n    newSocket.on('connect', () => {\r\n      console.log('Connected to server');\r\n      setSocket(newSocket);\r\n    });\r\n\r\n    newSocket.on('disconnect', () => {\r\n      console.log('Disconnected from server');\r\n    });\r\n\r\n    newSocket.on('disaster_created', (data) => {\r\n      console.log('New disaster created:', data);\r\n      // You can add toast notifications here\r\n    });\r\n\r\n    newSocket.on('disaster_updated', (data) => {\r\n      console.log('Disaster updated:', data);\r\n    });\r\n\r\n    return () => {\r\n      newSocket.close();\r\n    };\r\n  }, []);\r\n\r\n  // Check for stored user on app load\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem('disasterResponseUser');\r\n    if (storedUser) {\r\n      const userData = JSON.parse(storedUser);\r\n      setUser(userData);\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  // Fetch disasters when user is logged in\r\n  useEffect(() => {\r\n    if (user) {\r\n      fetchDisasters();\r\n    }\r\n  }, [user]);\r\n\r\n  // Login function\r\n  const login = (username) => {\r\n    if (MOCK_USERS[username]) {\r\n      const userData = MOCK_USERS[username];\r\n      setUser(userData);\r\n      localStorage.setItem('disasterResponseUser', JSON.stringify(userData));\r\n      \r\n      // Set default authorization header for all requests\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${username}`;\r\n      \r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('disasterResponseUser');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n  };\r\n\r\n  // Fetch disasters from API\r\n  const fetchDisasters = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/disasters');\r\n      setDisasters(response.data || []);\r\n    } catch (error) {\r\n      console.error('Error fetching disasters:', error);\r\n      setDisasters([]);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loading\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <p>Loading Disaster Response Platform...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!user) {\r\n    return (\r\n      <div className=\"app\">\r\n        <Login onLogin={login} users={Object.keys(MOCK_USERS)} />\r\n        <Toaster position=\"top-right\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout }}>\r\n      <SocketContext.Provider value={socket}>\r\n        <div className=\"app\">\r\n          <header className=\"header\">\r\n            <h1>ðŸš¨ Disaster Response Platform</h1>\r\n            <div className=\"user-info\">\r\n              <span>Welcome, {user.username} ({user.role})</span>\r\n              <button onClick={logout} className=\"logout-btn\">Logout</button>\r\n            </div>\r\n          </header>\r\n          \r\n          <main className=\"main-content\">\r\n            <div className=\"dashboard\">\r\n              <h2>Dashboard</h2>\r\n              <div className=\"stats-grid\">\r\n                <div className=\"stat-card\">\r\n                  <h3>Active Disasters</h3>\r\n                  <p className=\"stat-number\">{disasters.length}</p>\r\n                </div>\r\n                <div className=\"stat-card\">\r\n                  <h3>Your Role</h3>\r\n                  <p className=\"stat-text\">{user.role}</p>\r\n                </div>\r\n                <div className=\"stat-card\">\r\n                  <h3>Connection Status</h3>\r\n                  <p className=\"stat-text\">{socket ? 'ðŸŸ¢ Connected' : 'ðŸ”´ Disconnected'}</p>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"disasters-section\">\r\n                <h3>Recent Disasters</h3>\r\n                {disasters.length > 0 ? (\r\n                  <div className=\"disasters-list\">\r\n                    {disasters.map((disaster, index) => (\r\n                      <div key={index} className=\"disaster-card\">\r\n                        <h4>{disaster.title || 'Untitled Disaster'}</h4>\r\n                        <p>{disaster.description || 'No description available'}</p>\r\n                        <div className=\"disaster-meta\">\r\n                          <span>Status: {disaster.status || 'Unknown'}</span>\r\n                          <span>Created: {new Date(disaster.created_at || Date.now()).toLocaleDateString()}</span>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                ) : (\r\n                  <p>No disasters found. The backend is running in mock mode.</p>\r\n                )}\r\n              </div>\r\n              \r\n              <div className=\"api-test-section\">\r\n                <h3>API Test</h3>\r\n                <button onClick={fetchDisasters} className=\"test-btn\">\r\n                  Refresh Disasters\r\n                </button>\r\n                <p>Backend URL: http://localhost:5000</p>\r\n                <p>Frontend URL: http://localhost:3000</p>\r\n              </div>\r\n            </div>\r\n          </main>\r\n          \r\n          <Toaster position=\"top-right\" />\r\n        </div>\r\n      </SocketContext.Provider>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}