{"level":"warn","message":"Gemini API key not set. Running in mock mode.","service":"disaster-response-platform","timestamp":"2025-06-20 10:31:27"}
{"level":"warn","message":"To use real Gemini API, set GEMINI_API_KEY in your .env file","service":"disaster-response-platform","timestamp":"2025-06-20 10:31:27"}
{"level":"warn","message":"No geocoding API keys set. Will use OpenStreetMap (free) as fallback.","service":"disaster-response-platform","timestamp":"2025-06-20 10:31:27"}
{"level":"warn","message":"To use Google Maps or Mapbox, set GOOGLE_MAPS_API_KEY or MAPBOX_ACCESS_TOKEN in your .env file","service":"disaster-response-platform","timestamp":"2025-06-20 10:31:27"}
{"level":"warn","message":"Supabase environment variables not set. Running in mock mode.","service":"disaster-response-platform","timestamp":"2025-06-20 10:31:28"}
{"level":"warn","message":"To use real Supabase, set SUPABASE_URL and SUPABASE_ANON_KEY in your .env file","service":"disaster-response-platform","timestamp":"2025-06-20 10:31:28"}
{"level":"info","message":"Mock Supabase client initialized for testing","service":"disaster-response-platform","timestamp":"2025-06-20 10:31:28"}
{"level":"info","message":"üöÄ Disaster Response Platform server running on port 5000","service":"disaster-response-platform","timestamp":"2025-06-20 10:31:28"}
{"level":"info","message":"üì° WebSocket server ready for real-time updates","service":"disaster-response-platform","timestamp":"2025-06-20 10:31:28"}
{"level":"info","message":"üåç Environment: undefined","service":"disaster-response-platform","timestamp":"2025-06-20 10:31:28"}
{"body":"{\\","expose":true,"level":"error","message":"Unhandled error: Expected property name or '}' in JSON at position 1","service":"disaster-response-platform","stack":"SyntaxError: Expected property name or '}' in JSON at position 1\n    at JSON.parse (<anonymous>)\n    at parse (C:\\Users\\Vipul-Pc\\OneDrive\\Desktop\\New folder (2)\\node_modules\\body-parser\\lib\\types\\json.js:92:19)\n    at C:\\Users\\Vipul-Pc\\OneDrive\\Desktop\\New folder (2)\\node_modules\\body-parser\\lib\\read.js:128:18\n    at AsyncResource.runInAsyncScope (node:async_hooks:206:9)\n    at invokeCallback (C:\\Users\\Vipul-Pc\\OneDrive\\Desktop\\New folder (2)\\node_modules\\raw-body\\index.js:238:16)\n    at done (C:\\Users\\Vipul-Pc\\OneDrive\\Desktop\\New folder (2)\\node_modules\\raw-body\\index.js:227:7)\n    at IncomingMessage.onEnd (C:\\Users\\Vipul-Pc\\OneDrive\\Desktop\\New folder (2)\\node_modules\\raw-body\\index.js:287:7)\n    at IncomingMessage.emit (node:events:519:28)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)","status":400,"statusCode":400,"timestamp":"2025-06-20 10:32:01","type":"entity.parse.failed"}
{"level":"info","message":"User authenticated: netrunnerX (admin)","service":"disaster-response-platform","timestamp":"2025-06-20 10:32:39"}
{"level":"error","message":"Error getting disasters: query.order is not a function","service":"disaster-response-platform","stack":"TypeError: query.order is not a function\n    at getDisasters (C:\\Users\\Vipul-Pc\\OneDrive\\Desktop\\New folder (2)\\services\\supabase.js:144:41)\n    at C:\\Users\\Vipul-Pc\\OneDrive\\Desktop\\New folder (2)\\routes\\disasters.js:131:31\n    at Layer.handle [as handle_request] (C:\\Users\\Vipul-Pc\\OneDrive\\Desktop\\New folder (2)\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Vipul-Pc\\OneDrive\\Desktop\\New folder (2)\\node_modules\\express\\lib\\router\\route.js:149:13)\n    at C:\\Users\\Vipul-Pc\\OneDrive\\Desktop\\New folder (2)\\middleware\\auth.js:229:5\n    at Layer.handle [as handle_request] (C:\\Users\\Vipul-Pc\\OneDrive\\Desktop\\New folder (2)\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Vipul-Pc\\OneDrive\\Desktop\\New folder (2)\\node_modules\\express\\lib\\router\\route.js:149:13)\n    at C:\\Users\\Vipul-Pc\\OneDrive\\Desktop\\New folder (2)\\middleware\\auth.js:123:5\n    at Layer.handle [as handle_request] (C:\\Users\\Vipul-Pc\\OneDrive\\Desktop\\New folder (2)\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Vipul-Pc\\OneDrive\\Desktop\\New folder (2)\\node_modules\\express\\lib\\router\\route.js:149:13)","timestamp":"2025-06-20 10:32:39"}
{"level":"error","message":"Error getting disasters: query.order is not a function","service":"disaster-response-platform","stack":"TypeError: query.order is not a function\n    at getDisasters (C:\\Users\\Vipul-Pc\\OneDrive\\Desktop\\New folder (2)\\services\\supabase.js:144:41)\n    at C:\\Users\\Vipul-Pc\\OneDrive\\Desktop\\New folder (2)\\routes\\disasters.js:131:31\n    at Layer.handle [as handle_request] (C:\\Users\\Vipul-Pc\\OneDrive\\Desktop\\New folder (2)\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Vipul-Pc\\OneDrive\\Desktop\\New folder (2)\\node_modules\\express\\lib\\router\\route.js:149:13)\n    at C:\\Users\\Vipul-Pc\\OneDrive\\Desktop\\New folder (2)\\middleware\\auth.js:229:5\n    at Layer.handle [as handle_request] (C:\\Users\\Vipul-Pc\\OneDrive\\Desktop\\New folder (2)\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Vipul-Pc\\OneDrive\\Desktop\\New folder (2)\\node_modules\\express\\lib\\router\\route.js:149:13)\n    at C:\\Users\\Vipul-Pc\\OneDrive\\Desktop\\New folder (2)\\middleware\\auth.js:123:5\n    at Layer.handle [as handle_request] (C:\\Users\\Vipul-Pc\\OneDrive\\Desktop\\New folder (2)\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Vipul-Pc\\OneDrive\\Desktop\\New folder (2)\\node_modules\\express\\lib\\router\\route.js:149:13)","timestamp":"2025-06-20 10:32:39"}
{"action":"list_disasters","ip":"::1","level":"info","message":"Audit log","method":"GET","path":"/","role":"admin","service":"disaster-response-platform","status_code":500,"timestamp":"2025-06-20 10:32:39","user_id":"netrunnerX","username":"netrunnerX"}
{"level":"warn","message":"Gemini API key not set. Running in mock mode.","service":"disaster-response-platform","timestamp":"2025-06-20 10:32:49"}
{"level":"warn","message":"To use real Gemini API, set GEMINI_API_KEY in your .env file","service":"disaster-response-platform","timestamp":"2025-06-20 10:32:49"}
{"level":"warn","message":"No geocoding API keys set. Will use OpenStreetMap (free) as fallback.","service":"disaster-response-platform","timestamp":"2025-06-20 10:32:49"}
{"level":"warn","message":"To use Google Maps or Mapbox, set GOOGLE_MAPS_API_KEY or MAPBOX_ACCESS_TOKEN in your .env file","service":"disaster-response-platform","timestamp":"2025-06-20 10:32:49"}
{"level":"warn","message":"Supabase environment variables not set. Running in mock mode.","service":"disaster-response-platform","timestamp":"2025-06-20 10:32:49"}
{"level":"warn","message":"To use real Supabase, set SUPABASE_URL and SUPABASE_ANON_KEY in your .env file","service":"disaster-response-platform","timestamp":"2025-06-20 10:32:49"}
{"level":"info","message":"Mock Supabase client initialized for testing","service":"disaster-response-platform","timestamp":"2025-06-20 10:32:49"}
{"level":"info","message":"üöÄ Disaster Response Platform server running on port 5000","service":"disaster-response-platform","timestamp":"2025-06-20 10:32:49"}
{"level":"info","message":"üì° WebSocket server ready for real-time updates","service":"disaster-response-platform","timestamp":"2025-06-20 10:32:49"}
{"level":"info","message":"üåç Environment: undefined","service":"disaster-response-platform","timestamp":"2025-06-20 10:32:49"}
{"level":"warn","message":"Gemini API key not set. Running in mock mode.","service":"disaster-response-platform","timestamp":"2025-06-20 10:33:20"}
{"level":"warn","message":"To use real Gemini API, set GEMINI_API_KEY in your .env file","service":"disaster-response-platform","timestamp":"2025-06-20 10:33:20"}
{"level":"warn","message":"No geocoding API keys set. Will use OpenStreetMap (free) as fallback.","service":"disaster-response-platform","timestamp":"2025-06-20 10:33:20"}
{"level":"warn","message":"To use Google Maps or Mapbox, set GOOGLE_MAPS_API_KEY or MAPBOX_ACCESS_TOKEN in your .env file","service":"disaster-response-platform","timestamp":"2025-06-20 10:33:20"}
{"level":"warn","message":"Supabase environment variables not set. Running in mock mode.","service":"disaster-response-platform","timestamp":"2025-06-20 10:33:21"}
{"level":"warn","message":"To use real Supabase, set SUPABASE_URL and SUPABASE_ANON_KEY in your .env file","service":"disaster-response-platform","timestamp":"2025-06-20 10:33:21"}
{"level":"info","message":"Mock Supabase client initialized for testing","service":"disaster-response-platform","timestamp":"2025-06-20 10:33:21"}
{"level":"info","message":"üöÄ Disaster Response Platform server running on port 5000","service":"disaster-response-platform","timestamp":"2025-06-20 10:33:21"}
{"level":"info","message":"üì° WebSocket server ready for real-time updates","service":"disaster-response-platform","timestamp":"2025-06-20 10:33:21"}
{"level":"info","message":"üåç Environment: undefined","service":"disaster-response-platform","timestamp":"2025-06-20 10:33:21"}
{"level":"info","message":"User authenticated: netrunnerX (admin)","service":"disaster-response-platform","timestamp":"2025-06-20 10:33:27"}
{"action":"list_disasters","ip":"::1","level":"info","message":"Audit log","method":"GET","path":"/","role":"admin","service":"disaster-response-platform","status_code":200,"timestamp":"2025-06-20 10:33:27","user_id":"netrunnerX","username":"netrunnerX"}
